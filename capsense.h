/*******************************************************************************
 * @file
 * @brief Capacitive sense driver
 *******************************************************************************
 * # License
 * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * The licensor of this software is Silicon Laboratories Inc. Your use of this
 * software is governed by the terms of Silicon Labs Master Software License
 * Agreement (MSLA) available at
 * www.silabs.com/about-us/legal/master-software-license-agreement. This
 * software is distributed to you in Source Code format and is governed by the
 * sections of the MSLA applicable to Source Code.
 *
 ******************************************************************************/
#ifndef SRC_CAPSENSE_H_
#define SRC_CAPSENSE_H_

#include <capsenseconfig.h>

/******************************************************************************
 * @brief Get the current channelValue for a channel
 * @param channel The channel.
 * @return The channelValue.
 *****************************************************************************/
uint32_t CAPSENSE_getVal(uint8_t channel);

/******************************************************************************
 * @brief Get the current normalized channelValue for a channel
 * @param channel The channel.
 * @return The channel value in range (0-256).
 *****************************************************************************/
uint32_t CAPSENSE_getNormalizedVal(uint8_t channel);

/******************************************************************************
 * @brief Get the state of the Gecko Button
 * @param channel The channel.
 * @return true if the button is "pressed"
 *         false otherwise.
 *****************************************************************************/
bool CAPSENSE_getPressed(uint8_t channel);

/******************************************************************************
 * @brief Get the position of the slider
 * @return The position of the slider if it can be determined,
 *         -1 otherwise.
 *****************************************************************************/
int32_t CAPSENSE_getSliderPosition(void);

/******************************************************************************
 * @brief
 *   This function iterates through all the capsensors and reads and
 *   initiates a reading. Uses EM1 while waiting for the result from
 *   each sensor.
 *****************************************************************************/
void CAPSENSE_Sense(void);
/******************************************************************************
 * @brief
 *   Initializes the capacitive sense system.
 *
 * @details
 *   Capacitive sensing uses two timers: TIMER0 and TIMER1 as well as ACMP.
 *   ACMP is set up in cap-sense (oscillator mode).
 *   TIMER1 counts the number of pulses generated by ACMP_CAPSENSE.
 *   When TIMER0 expires it generates an interrupt.
 *   The number of pulses counted by TIMER1 is then stored in channelValues
 *****************************************************************************/
void CAPSENSE_Init(void);


#endif /* SRC_CAPSENSE_H_ */
